# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

environment:
  global:
    RUST_VERSION: nightly
    CRATE_NAME: alacritty

  matrix:
    - platform: x86
      TARGET: x86_64-pc-windows-msvc
    - platform: x64
      TARGET: i686-pc-windows-msvc

shallow_clone: true

install:
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V
  # Make 32bit libclang dll available for winpty-sys build on i686
  - If [%TARGET%]==[i686-pc-windows-msvc] (
      copy assets\windows\x86\libclang_win32_5.0.1.dll "C:\Program Files\LLVM\bin\libclang.dll"
    )

cache:
  - \%USERPROFILE%\.cargo
# - \%USERPROFILE%\.multirust
  - target

build_script:
  - cargo build --target %TARGET%
  - cargo build --target %TARGET% --release

test_script:
  - cargo test --target %TARGET%

before_deploy:
  # TODO Update this to build the artifacts that matter to you
  - cargo build --target %TARGET% --release
  - ps: ci\before_deploy.ps1

artifacts:
  - path: target\%TARGET%\debug\alacritty.exe
    name: Alacritty (debug build)
  - path: target\%TARGET%\release\alacritty.exe
    name: Alacritty
  - path: assets\windows\%platform%\winpty-agent.exe

# deploy:
#   artifact: /.*\.zip/
#   auth_token:
#     secure: t3puM/2hOig26EHhAodcZBc61NywF7/PFEpimR6SwGaCiqS07KR5i7iAhSABmBp7
#   description: ''
#   on:
#     # TODO Here you can pick which targets will generate binary releases
#     # In this example, there are some targets that are tested using the stable
#     # and nightly channels. This condition makes sure there is only one release
#     # for such targets and that's generated using the stable channel
#     RUST_VERSION: stable
#     appveyor_repo_tag: true
#   provider: GitHub

branches:
  only:
    # Release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master
    - windows

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false